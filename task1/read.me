From Scratch Code

Step - 1
    npm init -y
    npm install express body-parser sequelize mysql2 express-validator
    npm install nodemon --save-dev

Step - 2
    skip step - 1 if you have already initialized npm, run command (npm i)
    Setup db name in models/index.js

Step - 3
    run command
        npm run dev
----------------------------------------------------------------
Task 1.1 user information is stored
-----------------------------------
POST: api/users
Input:
{
    "firstName": "Vishal",
    "lastName": "Kahar",
    "email": "v3@gmail.com",
    "mobileNumber": 1234568793,
    "birthdate": "2000-02-27",
    "addresses": [
        {
            "addressLine1": "123 Main Street",
            "pincode": 123456,
            "city": "New York",
            "state": "NY",
            "type": "Home"
        },
        {
            "addressLine1": "456 Elm Street",
            "addressLine2": "Apt 2B",
            "pincode": "54321",
            "city": "Los Angeles",
            "state": "CA",
            "type": "Office"
        }
    ]
}
Output:
{
    "id": 5,
    "firstName": "Vishal",
    "lastName": "Kahar",
    "email": "v3@gmail.com",
    "mobileNumber": 1234568793,
    "birthdate": "2000-02-27T00:00:00.000Z",
    "updatedAt": "2023-09-05T18:15:19.066Z",
    "createdAt": "2023-09-05T18:15:19.066Z"
}

Task 1.2 - search info
----------------------
get: api/user/search?nameOrEmail=vishal&minAge=25&city=Mumbai

parameters: nameOrEmail, minAge, maxAge, city
Input:
Output:

Task 1.3 - update the user information
--------------------------------------
PUT: api/users/5
Input: all fields are optional
{
    "firstName": "Vishal K",
    "lastName": "Kahar K",
    "email": "v3@gmail.com",
    "mobileNumber": 1234568793,
    "birthdate": "2000-02-27",
    "addresses": [
        {
            "addressLine1": "1234 Main Street",
            "addressLine2": "Apt 1234",
            "pincode": 12345,
            "city": "New York 2",
            "state": "NY",
            "type": "Home"
        },
        {
            "addressLine1": "4567 Elm Street",
            "addressLine2": "Apt 2B",
            "pincode": "54321",
            "city": "Los Angeles 2",
            "state": "CA",
            "type": "Office"
        }
    ]
}
Output:
{
    "id": 5,
    "firstName": "Vishal K",
    "lastName": "Kahar K",
    "email": "v3@gmail.com",
    "mobileNumber": 1234568793,
    "birthdate": "2000-02-27T00:00:00.000Z",
    "createdAt": "2023-09-05T18:15:19.000Z",
    "updatedAt": "2023-09-05T18:22:35.265Z",
    "Addresses": [
        {
            "id": 2,
            "addressLine1": "1234 Main Street",
            "addressLine2": "Apt 1234",
            "pincode": 12345,
            "city": "New York 2",
            "state": "NY",
            "type": "Home",
            "createdAt": "2023-09-05T18:15:19.000Z",
            "updatedAt": "2023-09-05T18:22:35.298Z",
            "UserId": 5
        },
        {
            "id": 3,
            "addressLine1": "4567 Elm Street",
            "addressLine2": "Apt 2B",
            "pincode": "54321",
            "city": "Los Angeles 2",
            "state": "CA",
            "type": "Office",
            "createdAt": "2023-09-05T18:15:19.000Z",
            "updatedAt": "2023-09-05T18:21:21.000Z",
            "UserId": 5
        }
    ]
}

Extra APIs
----------
delete: api/users/5
Input:
Output: status response 204

get: api/users (all users)
Input:
Output: JSON response

get: api/users/5
Input:
Output: JSON response